pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  environment {
    GIT_REPO_NAME = "Java-app"
    GIT_USER_NAME = "bhaktabahadurthapa"
    SONAR_URL = "http://54.177.233.149:9000"
    DOCKER_IMAGE = "lishan2023/java-app:${BUILD_NUMBER}"
  }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "${REGISTRY_CREDENTIALS}") {
            dockerImage.push()
          }
        }
      }
    }
    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "bhaktathapamgr5@gmail.com"
            git config user.name "bhaktabahadurthapa"

            BUILD_NUMBER=${BUILD_NUMBER}

            # Update deployment file with build number
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml

            # Add and commit changes
            git add spring-boot-app-manifests/deployment.yml

            # Check if .gitignore exists
            if [ ! -f .gitignore ]; then
                touch .gitignore
            fi

            # Ensure target directory is ignored
            if ! grep -q 'spring-boot-app/target/' .gitignore; then
                echo 'spring-boot-app/target/' >> .gitignore
                git add .gitignore
                git commit -m "Add target directory to .gitignore"
            fi

            git commit -m "Update deployment image to version ${BUILD_NUMBER}"

            # Push changes to the repository
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
  post {
    always {
      echo 'Pipeline finished.'
    }
  }
}
